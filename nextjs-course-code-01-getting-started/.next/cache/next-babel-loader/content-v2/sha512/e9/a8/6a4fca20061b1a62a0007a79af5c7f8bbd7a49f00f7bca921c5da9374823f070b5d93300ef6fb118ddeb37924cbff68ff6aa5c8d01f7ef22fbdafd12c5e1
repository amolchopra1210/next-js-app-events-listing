{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/amolchopra/Desktop/Projects/next-app/nextjs-course-code-01-getting-started/pages/events/[...slug].js\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport EventList from \"../../components/events/event-list\";\nexport var __N_SSP = true;\nexport default function FilteredEventsPage(props) {\n  _s();\n\n  var router = useRouter(); // const filterData = router.query.slug;\n  // if (!filterData) {\n  //   return <p className=\"center\">Loading...</p>;\n  // }\n  // const filteredYear = filterData[0];\n  // const filteredMonth = filterData[1];\n  // const numYear = +filteredYear;\n  // const numMonth = +filteredMonth;\n\n  if (props.hasError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"Invalid filter. Please try again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  var filteredEvents = props.events;\n\n  if (!filteredEvents || filteredEvents.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"No events found for this filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(EventList, {\n      items: filteredEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FilteredEventsPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = FilteredEventsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilteredEventsPage\");","map":{"version":3,"sources":["/Users/amolchopra/Desktop/Projects/next-app/nextjs-course-code-01-getting-started/pages/events/[...slug].js"],"names":["useRouter","EventList","FilteredEventsPage","props","router","hasError","filteredEvents","events","length"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,oCAAtB;;AAGA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA;;AAChD,MAAMC,MAAM,GAAGJ,SAAS,EAAxB,CADgD,CAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIG,KAAK,CAACE,QAAV,EAAoB;AAClB,wBAAO;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAMC,cAAc,GAAGH,KAAK,CAACI,MAA7B;;AAEA,MAAI,CAACD,cAAD,IAAmBA,cAAc,CAACE,MAAf,KAA0B,CAAjD,EAAoD;AAClD,wBAAO;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAxBuBJ,kB;UACPF,S;;;KADOE,kB","sourcesContent":["import { useRouter } from \"next/router\";\nimport EventList from \"../../components/events/event-list\";\nimport { getFilteredEvents } from \"../../helpers/api-utils\";\n\nexport default function FilteredEventsPage(props) {\n  const router = useRouter();\n  // const filterData = router.query.slug;\n  // if (!filterData) {\n  //   return <p className=\"center\">Loading...</p>;\n  // }\n  // const filteredYear = filterData[0];\n  // const filteredMonth = filterData[1];\n  // const numYear = +filteredYear;\n  // const numMonth = +filteredMonth;\n\n  if (props.hasError) {\n    return <p className=\"center\">Invalid filter. Please try again</p>;\n  }\n  const filteredEvents = props.events;\n\n  if (!filteredEvents || filteredEvents.length === 0) {\n    return <p className=\"center\">No events found for this filter</p>;\n  }\n  return (\n    <div>\n      <EventList items={filteredEvents} />\n    </div>\n  );\n}\n\nexport async function getServerSideProps(context) {\n  const { params } = context;\n  const filterData = params.slug;\n  const filteredYear = filterData[0];\n  const filteredMonth = filterData[1];\n  const numYear = +filteredYear;\n  const numMonth = +filteredMonth;\n  if (\n    isNaN(numMonth) ||\n    isNaN(numYear) ||\n    numYear > 2030 ||\n    numYear < 2021 ||\n    numMonth < 1 ||\n    numMonth > 12\n  ) {\n    return {\n      props: {\n        hasError: true,\n      },\n      //notFound: true,\n      //redirect: {\n      // destination: '/error'\n    };\n  }\n  const filteredEvents = await getFilteredEvents({\n    year: numYear,\n    month: numMonth,\n  });\n  return {\n    props: {\n      events: filteredEvents,\n      date: {\n        year: numYear,\n        month: numMonth,\n      },\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}