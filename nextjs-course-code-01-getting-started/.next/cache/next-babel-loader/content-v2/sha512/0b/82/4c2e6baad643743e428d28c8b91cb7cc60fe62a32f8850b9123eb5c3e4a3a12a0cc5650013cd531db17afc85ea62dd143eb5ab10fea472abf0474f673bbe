{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/amolchopra/Desktop/Projects/next-app/nextjs-course-code-01-getting-started/pages/events/[...slug].js\";\nimport { useRouter } from \"next/router\";\nimport { getFilteredEvents } from \"../../dummy-data\";\nexport default function FilteredEventsPage() {\n  const router = useRouter();\n  const filterData = router.query.slug;\n\n  if (!filterData) {\n    /*#__PURE__*/\n    _jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this);\n  }\n\n  const filteredYear = filterData === null || filterData === void 0 ? void 0 : filterData[0];\n  const filteredMonth = filterData[1];\n  const numYear = +filteredYear;\n  const numMonth = +filteredMonth;\n\n  if (isNaN(numMonth) || isNaN(numYear) || numYear > 2030 || numYear < 2021 || numMonth < 1 || numMonth > 12) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"Invalid filter. Please try again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"The filtered events page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/amolchopra/Desktop/Projects/next-app/nextjs-course-code-01-getting-started/pages/events/[...slug].js"],"names":["useRouter","getFilteredEvents","FilteredEventsPage","router","filterData","query","slug","filteredYear","filteredMonth","numYear","numMonth","isNaN"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AAEA,eAAe,SAASC,kBAAT,GAA8B;AAC3C,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAMI,UAAU,GAAGD,MAAM,CAACE,KAAP,CAAaC,IAAhC;;AACA,MAAI,CAACF,UAAL,EAAiB;AACf;AAAA;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD;;AACD,QAAMG,YAAY,GAAGH,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAG,CAAH,CAA/B;AACA,QAAMI,aAAa,GAAGJ,UAAU,CAAC,CAAD,CAAhC;AACA,QAAMK,OAAO,GAAG,CAACF,YAAjB;AACA,QAAMG,QAAQ,GAAG,CAACF,aAAlB;;AACA,MACEG,KAAK,CAACD,QAAD,CAAL,IACAC,KAAK,CAACF,OAAD,CADL,IAEAA,OAAO,GAAG,IAFV,IAGAA,OAAO,GAAG,IAHV,IAIAC,QAAQ,GAAG,CAJX,IAKAA,QAAQ,GAAG,EANb,EAOE;AACA,wBAAO;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD","sourcesContent":["import { useRouter } from \"next/router\";\nimport { getFilteredEvents } from \"../../dummy-data\";\n\nexport default function FilteredEventsPage() {\n  const router = useRouter();\n  const filterData = router.query.slug;\n  if (!filterData) {\n    <p className=\"center\">Loading...</p>;\n  }\n  const filteredYear = filterData?.[0];\n  const filteredMonth = filterData[1];\n  const numYear = +filteredYear;\n  const numMonth = +filteredMonth;\n  if (\n    isNaN(numMonth) ||\n    isNaN(numYear) ||\n    numYear > 2030 ||\n    numYear < 2021 ||\n    numMonth < 1 ||\n    numMonth > 12\n  ) {\n    return <p className=\"center\">Invalid filter. Please try again</p>;\n  }\n  return (\n    <div>\n      <h1>The filtered events page</h1>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}