{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/amolchopra/Desktop/Projects/next-app/nextjs-course-code-01-getting-started/pages/events/[...slug].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from \"next/router\";\nimport { getFilteredEvents } from \"../../dummy-data\";\nexport default function FilteredEventsPage() {\n  const router = useRouter();\n  const filterData = router.query.slug;\n\n  if (!filterData) {\n    /*#__PURE__*/\n    _jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this);\n  }\n\n  const filteredYear = filterData[0];\n  const filteredMonth = filterData[1];\n  const numYear = +filteredYear;\n  const numMonth = +filteredMonth;\n\n  if (isNaN(numMonth) || isNaN(numYear) || numYear > 2030 || numYear < 2021 || numMonth < 1 || numMonth > 12) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"Invalid filter. Please try again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n\n  const filteredEvents = getFilteredEvents(_objectSpread({\n    year: filteredYear\n  }, filteredMonth));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: filteredEvents\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n}","map":{"version":3,"sources":["/Users/amolchopra/Desktop/Projects/next-app/nextjs-course-code-01-getting-started/pages/events/[...slug].js"],"names":["useRouter","getFilteredEvents","FilteredEventsPage","router","filterData","query","slug","filteredYear","filteredMonth","numYear","numMonth","isNaN","filteredEvents","year"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AAEA,eAAe,SAASC,kBAAT,GAA8B;AAC3C,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAMI,UAAU,GAAGD,MAAM,CAACE,KAAP,CAAaC,IAAhC;;AACA,MAAI,CAACF,UAAL,EAAiB;AACf;AAAA;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD;;AACD,QAAMG,YAAY,GAAGH,UAAU,CAAC,CAAD,CAA/B;AACA,QAAMI,aAAa,GAAGJ,UAAU,CAAC,CAAD,CAAhC;AACA,QAAMK,OAAO,GAAG,CAACF,YAAjB;AACA,QAAMG,QAAQ,GAAG,CAACF,aAAlB;;AACA,MACEG,KAAK,CAACD,QAAD,CAAL,IACAC,KAAK,CAACF,OAAD,CADL,IAEAA,OAAO,GAAG,IAFV,IAGAA,OAAO,GAAG,IAHV,IAIAC,QAAQ,GAAG,CAJX,IAKAA,QAAQ,GAAG,EANb,EAOE;AACA,wBAAO;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,QAAME,cAAc,GAAGX,iBAAiB;AACtCY,IAAAA,IAAI,EAAEN;AADgC,KAEnCC,aAFmC,EAAxC;AAIA,sBAAO;AAAA,cAAMI;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD","sourcesContent":["import { useRouter } from \"next/router\";\nimport { getFilteredEvents } from \"../../dummy-data\";\n\nexport default function FilteredEventsPage() {\n  const router = useRouter();\n  const filterData = router.query.slug;\n  if (!filterData) {\n    <p className=\"center\">Loading...</p>;\n  }\n  const filteredYear = filterData[0];\n  const filteredMonth = filterData[1];\n  const numYear = +filteredYear;\n  const numMonth = +filteredMonth;\n  if (\n    isNaN(numMonth) ||\n    isNaN(numYear) ||\n    numYear > 2030 ||\n    numYear < 2021 ||\n    numMonth < 1 ||\n    numMonth > 12\n  ) {\n    return <p className=\"center\">Invalid filter. Please try again</p>;\n  }\n  const filteredEvents = getFilteredEvents({\n    year: filteredYear,\n    ...filteredMonth,\n  });\n  return <div>{filteredEvents}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}